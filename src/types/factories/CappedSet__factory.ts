/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CappedSet, CappedSetInterface } from "../CappedSet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numElements",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newLowestAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLowestValue",
        type: "uint256",
      },
    ],
    name: "AddressInserted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newLowestAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLowestValue",
        type: "uint256",
      },
    ],
    name: "AddressRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newLowestAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLowestValue",
        type: "uint256",
      },
    ],
    name: "AddressUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "insert",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "numElements",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "removeAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newVal",
        type: "uint256",
      },
    ],
    name: "update",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161090738038061090783398101604081905261002f91610037565b600255610050565b60006020828403121561004957600080fd5b5051919050565b6108a88061005f6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80633ccc0522116100505780633ccc0522146100d857806381779a44146100eb578063a2d83b5e1461010057600080fd5b80630fd0ae10146100775780631e0e3925146100ae57806329092d0e146100c5575b600080fd5b61008a6100853660046107dd565b610113565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b6100b760025481565b6040519081526020016100a5565b61008a6100d3366004610807565b610360565b6100b76100e6366004610807565b610464565b6100fe6100f9366004610807565b6104e8565b005b61008a61010e3660046107dd565b610600565b6000806001600160a01b0384166101715760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642061646472657373000000000000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b03841660009081526001602052604090205460ff16156101da5760405162461bcd60e51b815260206004820152601660248201527f4164647265737320616c726561647920657869737473000000000000000000006044820152606401610168565b60035460025481036102765760006101f06106f3565b506001600160a01b03811660009081526020818152604080832083905560019091529020805460ff191690559050610227816104e8565b856001600160a01b0316816001600160a01b03167f53c6138b42c27e0b27ce424b65e1cee1f34e9b9b4e8f28817faf74867e4874388760405161026c91815260200190565b60405180910390a3505b6003805460018082019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038816908117909155600090815260208181526040808320889055908390528120805460ff1916909217909155806102fa6106f3565b91509150816001600160a01b0316876001600160a01b03167f91859d4240290f730ff9d63296da5eb5daa949c62e8a0099430c2e36e5fba7ea888460405161034c929190918252602082015260400190565b60405180910390a390969095509350505050565b6001600160a01b038116600090815260016020526040812054819060ff166103ca5760405162461bcd60e51b815260206004820152601560248201527f4164647265737320646f65736e277420657869737400000000000000000000006044820152606401610168565b6001600160a01b03831660009081526020818152604080832083905560019091529020805460ff191690556103fe836104e8565b6000806104096106f3565b91509150816001600160a01b0316856001600160a01b03167f53c6138b42c27e0b27ce424b65e1cee1f34e9b9b4e8f28817faf74867e4874388360405161045291815260200190565b60405180910390a39094909350915050565b6001600160a01b03811660009081526001602052604081205460ff166104cc5760405162461bcd60e51b815260206004820152601560248201527f4164647265737320646f65736e277420657869737400000000000000000000006044820152606401610168565b506001600160a01b031660009081526020819052604090205490565b60035460005b818110156105fb57826001600160a01b03166003828154811061051357610513610829565b6000918252602090912001546001600160a01b0316036105e957600361053a600184610855565b8154811061054a5761054a610829565b600091825260209091200154600380546001600160a01b03909216918390811061057657610576610829565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060038054806105b5576105b561086c565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff19169055019055505050565b806105f381610882565b9150506104ee565b505050565b6001600160a01b038216600090815260016020526040812054819060ff1661066a5760405162461bcd60e51b815260206004820152601560248201527f4164647265737320646f65736e277420657869737400000000000000000000006044820152606401610168565b6001600160a01b03841660009081526020819052604081208490558061068e6106f3565b91509150816001600160a01b0316866001600160a01b03167fd5ef1210a79cfce7895b68dfd523e075b4d06f1e4929f6d78a4206166a772c9d87846040516106e0929190918252602082015260400190565b60405180910390a3909590945092505050565b6003546000908190600181900361070f57506000928392509050565b6000600360008154811061072557610725610829565b60009182526020808320909101546001600160a01b03168083529082905260409091205490915060015b838110156107b65760006003828154811061076c5761076c610829565b60009182526020808320909101546001600160a01b0316808352908290526040909120549091508381116107a1578194508093505b505080806107ae90610882565b91505061074f565b509094909350915050565b80356001600160a01b03811681146107d857600080fd5b919050565b600080604083850312156107f057600080fd5b6107f9836107c1565b946020939093013593505050565b60006020828403121561081957600080fd5b610822826107c1565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156108675761086761083f565b500390565b634e487b7160e01b600052603160045260246000fd5b6000600182016108945761089461083f565b506001019056fea164736f6c634300080e000a";

type CappedSetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CappedSetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CappedSet__factory extends ContractFactory {
  constructor(...args: CappedSetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CappedSet";
  }

  deploy(
    _numElements: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CappedSet> {
    return super.deploy(_numElements, overrides || {}) as Promise<CappedSet>;
  }
  getDeployTransaction(
    _numElements: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_numElements, overrides || {});
  }
  attach(address: string): CappedSet {
    return super.attach(address) as CappedSet;
  }
  connect(signer: Signer): CappedSet__factory {
    return super.connect(signer) as CappedSet__factory;
  }
  static readonly contractName: "CappedSet";
  public readonly contractName: "CappedSet";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CappedSetInterface {
    return new utils.Interface(_abi) as CappedSetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CappedSet {
    return new Contract(address, _abi, signerOrProvider) as CappedSet;
  }
}
